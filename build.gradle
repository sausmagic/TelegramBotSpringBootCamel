buildscript {
	ext {
		springBootVersion = '1.5.8.RELEASE'
		camelVersion = '2.20.0'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
	//UMBERTO: per risolvere il : Class path contains multiple SLF4J bindings facendo vincere quello incluso in logback per ora 
	configurations {
 	    all*.exclude group:"org.apache.logging.log4j", module: "log4j-slf4j-impl"
	}
}





apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Gradle Jar File Example',
        	'Implementation-Version': version,
        	'Main-Class': 'it.umberto.palo.springboot.starterApp.TelegramBotApplication'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

repositories {
	mavenCentral()
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.name == 'log4j') {
            details.useTarget "org.slf4j:log4j-over-slf4j:1.7.25"
        }
    }
}


dependencies {
	//compile ('org.apache.activemq:activemq-all:5.15.2')
	//{
		//exclude group: "org.slf4j", module: "log4j-over-slf4j"
		//excluding a particular transitive dependency:

		//exclude module: 'cglib' //by artifact name

		//exclude group: 'org.slf4j' //by group

		//exclude group: 'org.unwanted', module: 'iAmBuggy' //by both name and group

	//}
	compile group: 'org.apache.activemq', name: 'activemq-camel', version: '5.15.2'
	compile("org.springframework.boot:spring-boot-starter-activemq")
    compile("org.apache.activemq:activemq-broker")
	compile group: 'org.apache.camel', name: 'camel-telegram-starter', version: '2.20.0'
	
	compile('org.apache.camel:camel-spring-boot-starter:2.20.0')
	compile group: 'org.apache.camel', name: 'camel-jms', version: '2.20.0'
	compile group: 'org.apache.camel', name: 'camel-ftp', version: '2.20.0'
	compile('org.springframework.boot:spring-boot-starter-aop')
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-solr'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-social-facebook'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-social-linkedin'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-social-twitter'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
	compile group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}

/**uploadArchives {
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars

            repository(url: "https://nexushost/content/repositories/releases") {
                authentication(
                        userName: "user",
                        password: "password"
                )
            }

            snapshotRepository(url: "https://nexushost/content/repositories/snapshots") {
                authentication(
                        userName: "user",
                        password: "password",
                )
            }

            pom {
                groupId = project.group
                artifactId = jar.baseName
                version = jar.version
                project {
                    parent {
                        groupId "org.springframework.boot"
                        artifactId "spring-boot-starter-parent"
                        version "1.1.8.RELEASE"
                    }
                }
            }
        }
    }
}*/
